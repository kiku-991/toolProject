/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.view;

import com.mycompany.util.ConmentMessage;

/**
 *
 */
public class DataBaseType extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public DataBaseType() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SqlServer = new javax.swing.JButton();
        MySql = new javax.swing.JButton();
        PostgreSQL = new javax.swing.JButton();
        Oracel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        message = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("追加するデータベースの接続タイプを選択");

        SqlServer.setText("Microsoft SQL Server");
        SqlServer.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                SqlServerMouseMoved(evt);
            }
        });

        MySql.setText("MySQL（直接連続）");
        MySql.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                MySqlMouseMoved(evt);
            }
        });

        PostgreSQL.setText("PostgreSQL（直接連続）");
        PostgreSQL.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                PostgreSQLMouseMoved(evt);
            }
        });
        PostgreSQL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PostgreSQLActionPerformed(evt);
            }
        });

        Oracel.setText("Oracle（OCI経由or直接連続）");
        Oracel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                OracelMouseMoved(evt);
            }
        });
        Oracel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OracelActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("MS UI Gothic", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 102, 255));
        jLabel1.setText("接続専用　商用データベース");

        jLabel3.setFont(new java.awt.Font("MS UI Gothic", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 102, 255));
        jLabel3.setText("接続専用　オープンデータベース");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PostgreSQL, javax.swing.GroupLayout.DEFAULT_SIZE, 869, Short.MAX_VALUE)
                    .addComponent(Oracel, javax.swing.GroupLayout.DEFAULT_SIZE, 869, Short.MAX_VALUE)
                    .addComponent(SqlServer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MySql, javax.swing.GroupLayout.DEFAULT_SIZE, 869, Short.MAX_VALUE)
                    .addComponent(message, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(61, 61, 61))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(Oracel, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(SqlServer, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addGap(38, 38, 38)
                .addComponent(PostgreSQL, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                .addGap(28, 28, 28)
                .addComponent(MySql, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                .addGap(53, 53, 53)
                .addComponent(message, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                .addGap(95, 95, 95))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PostgreSQLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PostgreSQLActionPerformed
        // TODO add your handling code here:
        ConnectRegiste con = new ConnectRegiste();
        con.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_PostgreSQLActionPerformed

    private void PostgreSQLMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PostgreSQLMouseMoved
        message.setText(ConmentMessage.POSTGRESQL);
    }//GEN-LAST:event_PostgreSQLMouseMoved

    private void OracelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OracelMouseMoved
        message.setText(ConmentMessage.ORACLE);
    }//GEN-LAST:event_OracelMouseMoved

    private void SqlServerMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SqlServerMouseMoved
        message.setText(ConmentMessage.SQLSERVER);
    }//GEN-LAST:event_SqlServerMouseMoved

    private void MySqlMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MySqlMouseMoved
        message.setText(ConmentMessage.MYSQL);
    }//GEN-LAST:event_MySqlMouseMoved

    private void OracelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OracelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OracelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton MySql;
    private javax.swing.JButton Oracel;
    private javax.swing.JButton PostgreSQL;
    private javax.swing.JButton SqlServer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel message;
    // End of variables declaration//GEN-END:variables
}
