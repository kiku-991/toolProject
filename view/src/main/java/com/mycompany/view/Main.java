/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.view;

import com.mycompany.model.DataBaseInfo;
import com.mycompany.util.ConmentMessage;
import com.mycompany.util.FileMethod;
import com.mycompany.util.TemplateReader;
import com.mycompany.view.utils.DialogMessage;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.TreePath;

/**
 *
 */
public class Main extends javax.swing.JFrame {

    FileMethod fileChooser = new FileMethod();

    DialogMessage dialog = new DialogMessage();

    DefaultMutableTreeNode node;

    //Icon 設定
    Icon leafIcon = new ImageIcon("D:\\netbeansWorkspace\\toolProject\\view\\src\\main\\java\\icon\\Data-Grid-icon_16.png");
    Icon openIcon = new ImageIcon("D:\\netbeansWorkspace\\toolProject\\view\\src\\main\\java\\icon\\add_16.png");
    Icon closedIcon = new ImageIcon("D:\\netbeansWorkspace\\toolProject\\view\\src\\main\\java\\icon\\Data-Grid-icon_16.png");

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        //ボタン非活性
        Output.setEnabled(false);

        this.setLocationRelativeTo(null);

        Jtree.setRowHeight(30);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        menuBar2 = new java.awt.MenuBar();
        menu3 = new java.awt.Menu();
        menu4 = new java.awt.Menu();
        Datebase = new javax.swing.JButton();
        file = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        Add = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        AllDelete = new javax.swing.JButton();
        AllAdd = new javax.swing.JButton();
        Output = new javax.swing.JButton();
        SeletedOutput = new javax.swing.JButton();
        Path = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        SelectedList = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        UsedList = new javax.swing.JList<>();
        ExampleJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Jtree = new javax.swing.JTree();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        AddDB = new javax.swing.JMenu();
        AddDataBase = new javax.swing.JMenuItem();
        SqlRun = new javax.swing.JMenu();
        doSql = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        menu3.setLabel("File");
        menuBar2.add(menu3);

        menu4.setLabel("Edit");
        menuBar2.add(menu4);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("KIKU SQL");

        Datebase.setIcon(new javax.swing.ImageIcon("D:\\netbeansWorkspace\\toolProject\\view\\src\\main\\java\\icon\\database_32.png")); // NOI18N
        Datebase.setToolTipText("データベースの追加と削除");
        Datebase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DatebaseActionPerformed(evt);
            }
        });

        file.setIcon(new javax.swing.ImageIcon("D:\\netbeansWorkspace\\toolProject\\view\\src\\main\\java\\icon\\folder_32.png")); // NOI18N
        file.setToolTipText("ドキュメントを開く");
        file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        Add.setText("追加＞＞");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Delete.setText("＜＜削除");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        AllDelete.setText("＜＜全て削除");
        AllDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AllDeleteActionPerformed(evt);
            }
        });

        AllAdd.setText("全て追加＞＞");
        AllAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AllAddActionPerformed(evt);
            }
        });

        Output.setText("出力");
        Output.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OutputActionPerformed(evt);
            }
        });

        SeletedOutput.setText("出力場所を選択");
        SeletedOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeletedOutputActionPerformed(evt);
            }
        });

        Path.setBackground(new java.awt.Color(255, 255, 255));

        SelectedList.setBorder(javax.swing.BorderFactory.createTitledBorder("選択した表"));
        jScrollPane5.setViewportView(SelectedList);

        UsedList.setBorder(javax.swing.BorderFactory.createTitledBorder("使用可能な表"));
        jScrollPane6.setViewportView(UsedList);

        ExampleJLabel.setForeground(new java.awt.Color(255, 0, 51));
        ExampleJLabel.setText("例：D:\\netbeansWorkspace\\toolProject\\model\\src\\main\\java\\com\\mycompany");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SeletedOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Add, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AllDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AllAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ExampleJLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Path, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94)
                        .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96)
                        .addComponent(AllAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95)
                        .addComponent(AllDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SeletedOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Output, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ExampleJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Path, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("データベース");
        Jtree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        Jtree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JtreeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Jtree);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                .addGap(36, 36, 36)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        jMenu1.setText("ファイル");

        jMenuItem3.setIcon(new javax.swing.ImageIcon("D:\\netbeansWorkspace\\toolProject\\view\\src\\main\\java\\icon\\add_32.png")); // NOI18N
        jMenuItem3.setText("新規");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setIcon(new javax.swing.ImageIcon("D:\\netbeansWorkspace\\toolProject\\view\\src\\main\\java\\icon\\folder_32.png")); // NOI18N
        jMenuItem4.setText("開く");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("編集");
        jMenuBar1.add(jMenu2);

        AddDB.setText("データベース");

        AddDataBase.setText("データベースの追加");
        AddDataBase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddDataBaseActionPerformed(evt);
            }
        });
        AddDB.add(AddDataBase);

        jMenuBar1.add(AddDB);

        SqlRun.setText("SQL");

        doSql.setText("SQL実行");
        doSql.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doSqlActionPerformed(evt);
            }
        });
        SqlRun.add(doSql);

        jMenuBar1.add(SqlRun);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Datebase, javax.swing.GroupLayout.PREFERRED_SIZE, 52, Short.MAX_VALUE)
                        .addGap(59, 59, 59)
                        .addComponent(file, javax.swing.GroupLayout.PREFERRED_SIZE, 54, Short.MAX_VALUE)
                        .addGap(1206, 1206, 1206))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Datebase, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(file, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    /**
     * データベースの追加
     *
     * @param evt
     */
    private void DatebaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DatebaseActionPerformed

        AddOrDeleteDb add = new AddOrDeleteDb();
        DefaultListModel demoList = new DefaultListModel();
        if (DataBaseInfo.connect.getDatabaseAliasList() != null) {
            DataBaseInfo.connect.getDatabaseAliasList().forEach((list) -> {
                demoList.addElement(list);
            });
            add.DataBaseList.setModel(demoList);
        }

        add.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_DatebaseActionPerformed

    private void AddDataBaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddDataBaseActionPerformed

        AddOrDeleteDb add = new AddOrDeleteDb();
        add.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_AddDataBaseActionPerformed

    private void fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileActionPerformed

        fileChooser.selectedFile(this);
    }//GEN-LAST:event_fileActionPerformed

    /**
     * 出力フォルダを選択
     *
     * @param evt
     */
    private void SeletedOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeletedOutputActionPerformed

        String diretoryPath = fileChooser.getDirectory(this);
        if (diretoryPath.isEmpty()) {
            dialog.popDialog(ConmentMessage.CHOOSEPLEASE, false);
        } else {
            Path.setText(diretoryPath);
            Output.setEnabled(true);
        }
    }//GEN-LAST:event_SeletedOutputActionPerformed

    /**
     * 出力
     *
     * @param evt
     */
    private void OutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OutputActionPerformed

        String databaseName = DataBaseInfo.connect.getDatabaseName();
        String username = DataBaseInfo.connect.getUserName();
        String pwd = DataBaseInfo.connect.getPassword();
        boolean status = false;
        TemplateReader out = new TemplateReader();
        if (SelectedList.getModel().getSize() != 0) {
            //出力
            String outPath = Path.getText() + "\\";
            for (int i = 0; i < SelectedList.getModel().getSize(); i++) {
                boolean flg = out.getColumnAndType(SelectedList.getModel().getElementAt(i), outPath, databaseName, username, pwd);
                status = flg;
            }
            if (status == true) {
                dialog.popDialog(ConmentMessage.OUTPUTOK, status);
            } else {
                dialog.popDialog(ConmentMessage.OUTPUTFAIL, status);
            }
        } else {
            dialog.popDialog(ConmentMessage.NOSELECTEDTABLE, false);
        }

    }//GEN-LAST:event_OutputActionPerformed

    /**
     * 削除
     *
     * @param evt
     */
    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        DefaultListModel usedModel = (DefaultListModel) UsedList.getModel();
        if (SelectedList.getModel().getSize() != 0) {
            //選択されたテーブル名
            String deletedName = SelectedList.getSelectedValue();
            if (deletedName != null) {

                DefaultListModel listModel = (DefaultListModel) SelectedList.getModel();
                //選択されたテーブル名を取り除く
                listModel.removeElement(deletedName);
                //使用可能テーブルに戻る
                usedModel.addElement(deletedName);
            } else {
                dialog.popDialog(ConmentMessage.CHOOSEDELETATABLE, false);
            }

        } else {
            dialog.popDialog(ConmentMessage.NOUSEDTABLE, false);
        }

    }//GEN-LAST:event_DeleteActionPerformed

    /**
     * 追加
     *
     * @param evt
     */
    DefaultListModel demo = new DefaultListModel();
    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed

        DefaultListModel usedModel = (DefaultListModel) UsedList.getModel();
        if (usedModel.getSize() != 0) {
            //選択されたテーブル名

            String selected = UsedList.getSelectedValue();
            if (selected != null) {
                demo.addElement(selected);

                //選択されたテーブル名を追加
                SelectedList.setModel(demo);
                usedModel.removeElement(selected);
            } else {
                dialog.popDialog(ConmentMessage.CHOOSEADDTABLE, false);
            }

        } else {
            dialog.popDialog(ConmentMessage.NOUSEDTABLE, false);
        }

        UsedList.setSelectedIndex(0);
    }//GEN-LAST:event_AddActionPerformed

    /**
     * すべて削除
     *
     * @param evt
     */
    private void AllDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AllDeleteActionPerformed
        DefaultListModel usedModel = (DefaultListModel) UsedList.getModel();
        if (SelectedList.getModel().getSize() != 0) {
            DefaultListModel listModel = (DefaultListModel) SelectedList.getModel();
            //使用可能表に移動
            for (int i = 0; i < SelectedList.getModel().getSize(); i++) {
                Object item = SelectedList.getModel().getElementAt(i);
                usedModel.addElement(item);
            }
            //すべて取り除く
            listModel.removeAllElements();

        } else {
            dialog.popDialog(ConmentMessage.NODELETETABLE, false);
        }

    }//GEN-LAST:event_AllDeleteActionPerformed

    /**
     * すべて追加
     *
     * @param evt
     */
    private void AllAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AllAddActionPerformed
        ArrayList<String> selectedName = new ArrayList<>();
        DefaultListModel usedModel = (DefaultListModel) UsedList.getModel();
        if (usedModel.getSize() != 0) {
            DefaultListModel demoList = new DefaultListModel();

            for (int i = 0; i < UsedList.getModel().getSize(); i++) {
                demoList.addElement(UsedList.getModel().getElementAt(i));
                selectedName.add(UsedList.getModel().getElementAt(i));

            }
            usedModel.removeAllElements();
            SelectedList.setModel(demoList);
        } else {
            dialog.popDialog(ConmentMessage.NOUSEDTABLE, false);
        }

    }//GEN-LAST:event_AllAddActionPerformed

    /**
     * Jtree node click
     *
     * @param evt
     */
    private void JtreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtreeMouseClicked
        // TODO add your handling code here:

        TreePath[] treePaths = Jtree.getSelectionModel().getSelectionPaths();
        for (TreePath treePath : treePaths) {
            DefaultMutableTreeNode selectedElement = (DefaultMutableTreeNode) treePath.getLastPathComponent();
            Object userObject = selectedElement.getUserObject();
            if (userObject.equals(DataBaseInfo.connect.getDatabaseName())) {
                // String selectedDB = tableList.getSelectedValue();
                String pwd = DataBaseInfo.connect.getPassword();
                if (DataBaseInfo.connect.status == null) {
                    dialog.popLocalDBLogin(DataBaseInfo.connect.getDatabaseName(), pwd);
                }

            } else if (userObject.equals("public")) {

                DefaultTreeCellRenderer renderer = (DefaultTreeCellRenderer) Jtree.getCellRenderer();
                renderer.setLeafIcon(leafIcon);
            }
        }

    }//GEN-LAST:event_JtreeMouseClicked

    private void doSqlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doSqlActionPerformed
        // TODO add your handling code here:
        SqlRun sql = new SqlRun();
        sql.setVisible(true);
    }//GEN-LAST:event_doSqlActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JMenu AddDB;
    private javax.swing.JMenuItem AddDataBase;
    private javax.swing.JButton AllAdd;
    private javax.swing.JButton AllDelete;
    private javax.swing.JButton Datebase;
    private javax.swing.JButton Delete;
    private javax.swing.JLabel ExampleJLabel;
    public static javax.swing.JTree Jtree;
    private javax.swing.JButton Output;
    public javax.swing.JLabel Path;
    private javax.swing.JList<String> SelectedList;
    private javax.swing.JButton SeletedOutput;
    private javax.swing.JMenu SqlRun;
    public static javax.swing.JList<String> UsedList;
    private javax.swing.JMenuItem doSql;
    private javax.swing.JButton file;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.Menu menu3;
    private java.awt.Menu menu4;
    private java.awt.MenuBar menuBar1;
    private java.awt.MenuBar menuBar2;
    // End of variables declaration//GEN-END:variables

}
