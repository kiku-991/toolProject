/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.view;

import com.mycompany.model.DataBaseInfo;
import com.mycompany.util.ConmentMessage;
import com.mycompany.util.FileChoose;
import com.mycompany.util.TemplateReader;
import com.mycompany.view.utils.DialogMessage;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.TreePath;
import javax.swing.tree.TreeSelectionModel;

/**
 *
 */
public class Main extends javax.swing.JFrame {

    FileChoose fileChooser = new FileChoose();

    DialogMessage dialog = new DialogMessage();

    DefaultMutableTreeNode node;

    ArrayList<String> selectedName = new ArrayList<>();
    //Icon 設定
    Icon leafIcon = new ImageIcon("D:\\netbeansWorkspace\\toolProject\\view\\src\\main\\java\\database-table-icon.png");
    Icon openIcon = new ImageIcon("D:\\netbeansWorkspace\\toolProject\\view\\src\\main\\java\\icon\\database_32.png");
    Icon closedIcon = new ImageIcon("D:\\netbeansWorkspace\\toolProject\\view\\src\\main\\java\\icon\\Data-Grid-icon_16.png");

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        //ボタン非活性
        output.setEnabled(false);

        this.setLocationRelativeTo(null);
        DefaultTreeCellRenderer renderer = (DefaultTreeCellRenderer) Jtree.getCellRenderer();

        renderer.setLeafIcon(leafIcon);

        renderer.setClosedIcon(closedIcon);

        renderer.setOpenIcon(openIcon);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        menuBar2 = new java.awt.MenuBar();
        menu3 = new java.awt.Menu();
        menu4 = new java.awt.Menu();
        datebase = new javax.swing.JButton();
        file = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        add = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        allDelete = new javax.swing.JButton();
        allAdd = new javax.swing.JButton();
        output = new javax.swing.JButton();
        seletedOutput = new javax.swing.JButton();
        path = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        selectedList = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        usedList = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        Jtree = new javax.swing.JTree();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        sqlRun = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        menu3.setLabel("File");
        menuBar2.add(menu3);

        menu4.setLabel("Edit");
        menuBar2.add(menu4);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        datebase.setIcon(new javax.swing.ImageIcon("D:\\netbeansWorkspace\\toolProject\\view\\src\\main\\java\\icon\\database_32.png")); // NOI18N
        datebase.setToolTipText("データベースの追加と削除");
        datebase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datebaseActionPerformed(evt);
            }
        });

        file.setIcon(new javax.swing.ImageIcon("D:\\netbeansWorkspace\\toolProject\\view\\src\\main\\java\\icon\\folder_32.png")); // NOI18N
        file.setToolTipText("ドキュメントを開く");
        file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        add.setText("追加＞＞");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        delete.setText("＜＜削除");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        allDelete.setText("＜＜全て削除");
        allDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allDeleteActionPerformed(evt);
            }
        });

        allAdd.setText("全て追加＞＞");
        allAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allAddActionPerformed(evt);
            }
        });

        output.setText("出力");
        output.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputActionPerformed(evt);
            }
        });

        seletedOutput.setText("出力場所を選択");
        seletedOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seletedOutputActionPerformed(evt);
            }
        });

        path.setBackground(new java.awt.Color(255, 255, 255));

        selectedList.setBorder(javax.swing.BorderFactory.createTitledBorder("選択した表"));
        jScrollPane5.setViewportView(selectedList);

        usedList.setBorder(javax.swing.BorderFactory.createTitledBorder("使用可能な表"));
        jScrollPane6.setViewportView(usedList);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(path, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seletedOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(add, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(allDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(allAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96)
                        .addComponent(allAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95)
                        .addComponent(allDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seletedOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(output, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(path, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("データベース");
        Jtree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        Jtree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JtreeMouseClicked(evt);
            }
        });
        Jtree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                JtreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(Jtree);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                .addGap(36, 36, 36)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("ファイル");

        jMenuItem3.setIcon(new javax.swing.ImageIcon("D:\\netbeansWorkspace\\toolProject\\view\\src\\main\\java\\icon\\add_32.png")); // NOI18N
        jMenuItem3.setText("新規");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setIcon(new javax.swing.ImageIcon("D:\\netbeansWorkspace\\toolProject\\view\\src\\main\\java\\icon\\folder_32.png")); // NOI18N
        jMenuItem4.setText("開く");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("編集");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("データベース");

        jMenuItem5.setText("データベースの追加");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuBar1.add(jMenu3);

        sqlRun.setText("SQL");

        jMenuItem6.setText("SQL実行");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        sqlRun.add(jMenuItem6);

        jMenuBar1.add(sqlRun);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(datebase, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(file, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(datebase, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(file, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    /**
     * データベースの追加
     *
     * @param evt
     */
    private void datebaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datebaseActionPerformed

        AddOrDeleteDb add = new AddOrDeleteDb();
        DefaultListModel demoList = new DefaultListModel();
        if (DataBaseInfo.connect.getDatabaseAliasList() != null) {
            DataBaseInfo.connect.getDatabaseAliasList().forEach((list) -> {
                demoList.addElement(list);
            });
            add.dataBaseList.setModel(demoList);
        }

        add.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_datebaseActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        AddOrDeleteDb add = new AddOrDeleteDb();
        add.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileActionPerformed

        fileChooser.selectedFile(this);
    }//GEN-LAST:event_fileActionPerformed

    /**
     * 出力フォルダを選択
     *
     * @param evt
     */
    private void seletedOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seletedOutputActionPerformed

        String diretoryPath = fileChooser.getDirectory(this);
        if (diretoryPath.isEmpty()) {
            dialog.popDialog(ConmentMessage.CHOOSEPLEASE, false);
        } else {
            path.setText(diretoryPath);
            output.setEnabled(true);
        }
    }//GEN-LAST:event_seletedOutputActionPerformed

    private void outputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputActionPerformed

        String databaseName = DataBaseInfo.connect.getDatabaseName();
        String username = DataBaseInfo.connect.getUserName();
        String pwd = DataBaseInfo.connect.getPassword();
        boolean status = false;
        TemplateReader out = new TemplateReader();
        if (selectedList.getModel().getSize() != 0) {
            //出力
            String outPath = path.getText() + "\\";
            for (String tname : selectedName) {
                boolean flg = out.getColumnAndType(tname, outPath, databaseName, username, pwd);
                status = flg;
            }
            if (status == true) {
                dialog.popDialog(ConmentMessage.OUTPUTOK, status);
            } else {
                dialog.popDialog(ConmentMessage.OUTPUTFAIL, status);
            }
        } else {
            dialog.popDialog(ConmentMessage.NOSELECTEDTABLE, false);
        }

    }//GEN-LAST:event_outputActionPerformed

    /**
     * 削除
     *
     * @param evt
     */
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed

        if (selectedList.getModel().getSize() != 0) {
            //選択されたテーブル名
            String deletedName = selectedList.getSelectedValue();
            if (deletedName != null) {

                DefaultListModel listModel = (DefaultListModel) selectedList.getModel();
                //選択されたテーブル名を取り除く
                listModel.removeElement(deletedName);
            } else {
                dialog.popDialog(ConmentMessage.CHOOSEDELETATABLE, false);
            }

        } else {
            dialog.popDialog(ConmentMessage.NOUSEDTABLE, false);
        }

    }//GEN-LAST:event_deleteActionPerformed

    /**
     * 追加
     *
     * @param evt
     */
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed

        if (usedList.getModel().getSize() != 0) {
            //選択されたテーブル名
            String selected = usedList.getSelectedValue();
            if (selected != null) {
                selectedName.add(selected);
                //選択されたテーブル名を追加
                DefaultListModel demoList = new DefaultListModel();
                selectedName.forEach((tname) -> {
                    demoList.addElement(tname);
                });
                selectedList.setModel(demoList);
            } else {
                dialog.popDialog(ConmentMessage.CHOOSEADDTABLE, false);
            }

        } else {
            dialog.popDialog(ConmentMessage.NOUSEDTABLE, false);
        }

    }//GEN-LAST:event_addActionPerformed

    /**
     * すべて削除
     *
     * @param evt
     */
    private void allDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allDeleteActionPerformed

        if (selectedList.getModel().getSize() != 0) {
            DefaultListModel listModel = (DefaultListModel) selectedList.getModel();
            //すべて取り除く
            selectedName.clear();
            listModel.removeAllElements();
        } else {
            dialog.popDialog(ConmentMessage.NODELETETABLE, false);
        }

    }//GEN-LAST:event_allDeleteActionPerformed

    /**
     * すべて追加
     *
     * @param evt
     */
    private void allAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allAddActionPerformed

        if (usedList.getModel().getSize() != 0) {
            DefaultListModel demoList = new DefaultListModel();

            for (int i = 0; i < usedList.getModel().getSize(); i++) {
                demoList.addElement(usedList.getModel().getElementAt(i));
                selectedName.add(usedList.getModel().getElementAt(i));

            }

            selectedList.setModel(demoList);
        } else {
            dialog.popDialog(ConmentMessage.NOUSEDTABLE, false);
        }

    }//GEN-LAST:event_allAddActionPerformed

    private void JtreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_JtreeValueChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_JtreeValueChanged

    private void JtreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtreeMouseClicked
        // TODO add your handling code here:

        TreePath[] treePaths = Jtree.getSelectionModel().getSelectionPaths();
        for (TreePath treePath : treePaths) {
            DefaultMutableTreeNode selectedElement = (DefaultMutableTreeNode) treePath.getLastPathComponent();
            Object userObject = selectedElement.getUserObject();
            if (userObject.equals(DataBaseInfo.connect.getDatabaseName())) {
                // String selectedDB = tableList.getSelectedValue();
                String pwd = DataBaseInfo.connect.getPassword();

                dialog.popLocalDBLogin(DataBaseInfo.connect.getDatabaseName(), pwd);

            }//Do what you want with selected element's user object
        }

    }//GEN-LAST:event_JtreeMouseClicked

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        SqlRun sql = new SqlRun();
        sql.setVisible(true);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTree Jtree;
    private javax.swing.JButton add;
    private javax.swing.JButton allAdd;
    private javax.swing.JButton allDelete;
    private javax.swing.JButton datebase;
    private javax.swing.JButton delete;
    private javax.swing.JButton file;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.Menu menu3;
    private java.awt.Menu menu4;
    private java.awt.MenuBar menuBar1;
    private java.awt.MenuBar menuBar2;
    private javax.swing.JButton output;
    public javax.swing.JLabel path;
    private javax.swing.JList<String> selectedList;
    private javax.swing.JButton seletedOutput;
    private javax.swing.JMenu sqlRun;
    public static javax.swing.JList<String> usedList;
    // End of variables declaration//GEN-END:variables

}
