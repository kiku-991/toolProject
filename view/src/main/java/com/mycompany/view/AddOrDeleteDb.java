/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.view;

import com.mycompany.model.DataBaseInfo;
import com.mycompany.util.ConmentMessage;
import com.mycompany.util.Node;
import com.mycompany.view.utils.DialogMessage;
import javax.swing.DefaultListModel;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 */
public class AddOrDeleteDb extends javax.swing.JFrame {

    /**
     * Creates new form AddOrDeleteDb
     */
    public AddOrDeleteDb() {
        initComponents();
        //中央設置
        this.setLocationRelativeTo(null);
        Delete.setEnabled(false);
        Modify.setEnabled(false);

    }

    DialogMessage dialog = new DialogMessage();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Close = new javax.swing.JButton();
        Add = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Modify = new javax.swing.JButton();
        DB = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        DataBaseList = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("データベースの追加と削除");

        Close.setIcon(new javax.swing.ImageIcon("D:\\netbeansWorkspace\\toolProject\\view\\src\\main\\java\\icon\\close_32.png")); // NOI18N
        Close.setText("閉じる");
        Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseActionPerformed(evt);
            }
        });

        Add.setText("追加");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Delete.setText("削除");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Modify.setText("修正");
        Modify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifyActionPerformed(evt);
            }
        });

        DB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DBActionPerformed(evt);
            }
        });

        jLabel1.setText("データベースへの接続情報を登録します。データベースはあらかじめ作成され接続できる状態になっている必要があります。");

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("データベースツリーでデータベース名を[/]で区切って階層構造で表示する");

        DataBaseList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DataBaseListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(DataBaseList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(Add, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                        .addGap(29, 29, 29)
                        .addComponent(Modify, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                        .addGap(38, 38, 38)
                        .addComponent(Delete, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                        .addGap(452, 452, 452)
                        .addComponent(Close, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DB, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(45, 45, 45))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                .addGap(42, 42, 42)
                .addComponent(DB, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addGap(27, 27, 27)
                .addComponent(jCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Add, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Modify, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Close, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DBActionPerformed

    /**
     * 追加
     *
     * @param evt
     */
    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed

        DataBaseType type = new DataBaseType();
        type.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_AddActionPerformed

    private void DataBaseListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DataBaseListMouseClicked

        Delete.setEnabled(true);
        Modify.setEnabled(true);
        String selected = DataBaseList.getSelectedValue();
        String dbName = selected.replace(ConmentMessage.LOCALHOST, ConmentMessage.BLANK);
        DB.setText(ConmentMessage.DATABESEINFO + dbName);

    }//GEN-LAST:event_DataBaseListMouseClicked

    /**
     * 閉じる
     *
     * @param evt
     */
    private void CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseActionPerformed

        Main m = new Main();

        DefaultListModel demoList = new DefaultListModel();
//        List<String> tableList = new ArrayList<>();

        if (DataBaseInfo.connect.getDatabaseAliasList() != null) {

            DataBaseInfo.connect.getDatabaseAliasList().forEach((list) -> {
                demoList.addElement(list);
//                tableList.add(list);
            });
        }

        this.dispose();
        //String dbn = DataBaseInfo.connect.databaseAlias.replace("localhost/", "");
//        DefaultTreeModel mm = Node.Model(dbn, tableList);

        String dbn = DataBaseInfo.connect.getDatabaseName();
        DefaultTreeModel mm = Node.Model(dbn);
        m.Jtree.setModel(mm);
        m.setVisible(true);

    }//GEN-LAST:event_CloseActionPerformed

    /**
     * 削除
     *
     * @param evt
     */
    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed

        int index = DataBaseList.getSelectedIndex();
        if (index != -1) {
            ((DefaultListModel) DataBaseList.getModel()).remove(index);
            initComponents();
        } else {
            dialog.popDialog(ConmentMessage.NODELETETABLE, false);
        }

    }//GEN-LAST:event_DeleteActionPerformed

    private void ModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifyActionPerformed
        // TODO add your handling code here:
        String dbname = DataBaseList.getSelectedValue();
        if (dbname != null) {

            ConnectRegiste con = new ConnectRegiste();
            con.DatebaseName.setText(DataBaseInfo.connect.getDatabaseName());
            con.setVisible(true);
        } else {
            dialog.popDialog(ConmentMessage.MODIFYTABLE, false);
        }
    }//GEN-LAST:event_ModifyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddOrDeleteDb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddOrDeleteDb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddOrDeleteDb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddOrDeleteDb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddOrDeleteDb().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton Close;
    public javax.swing.JTextField DB;
    public javax.swing.JList<String> DataBaseList;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Modify;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
